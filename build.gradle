buildscript {
	ext {
		springBootVersion = '2.4.5'
	}
	repositories {
        mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	// https://projectlombok.org
	id "io.freefair.lombok" version "5.3.0"
}

repositories {
    mavenLocal()
	mavenCentral()
	jcenter()
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'

war {
	archivesBaseName = 'ngs-stats'
}

group = 'org.mskcc'
sourceCompatibility = '1.8'

dependencies {
	implementation "io.springfox:springfox-swagger-ui:2.9.2"
	implementation "io.springfox:springfox-swagger2:2.9.2"
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.0'
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.12'
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation ('org.springframework.boot:spring-boot-starter-web')
	implementation ('org.springframework.boot:spring-boot-starter-tomcat')
	implementation group: 'com.codesnippets4all', name: 'quick-json', version: '1.0.4'
	implementation 'org.apache.httpcomponents:httpclient:4.5.8'
	implementation group: 'org.jsoup', name: 'jsoup', version: '1.12.1'
	implementation group: 'com.squareup', name: 'javapoet', version: '1.10.0'

	runtimeOnly('mysql:mysql-connector-java')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation group: 'org.springframework', name: 'spring-test'
	testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'

	// from https://docs.gradle.org/current/userguide/java_testing.html#using_junit5
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testCompileOnly 'junit:junit:4.13'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
}

uploadArchives {
	repositories {
		mavenDeployer {
			repository(
					url: "${nexusUrlReleases}") {
				authentication(userName: nexusUsername, password: nexusPassword)
			}
			snapshotRepository(
					url: "${nexusUrlSnapshots}") {
				authentication(userName: nexusUsername, password: nexusPassword)
			}
		}
	}
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

task buildModels(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'org.mskcc.cellranger.documentation.CodeGenerator'
}